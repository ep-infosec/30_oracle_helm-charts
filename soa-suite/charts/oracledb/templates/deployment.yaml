apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oracledb.fullname" . }}
  labels:
    {{- include "oracledb.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ include "oracledb.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "oracledb.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "oracledb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "oracledb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: DB_SID
            value: {{ .Values.sid }}
          - name: DB_PDB
            value: {{ .Values.pdb }}
          - name: DB_DOMAIN
            value: {{ .Values.domain }}
          - name: DB_BUNDLE
            value: {{ .Values.bundle }}
          {{- if .Values.credentials.secretName }}
          - name: DB_PASSWD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.credentials.secretName }}
                key: "password"
          {{- else }}
          - name: DB_PASSWD
            value: "{{ .Values.credentials.password }}"
          {{- end }}
          ports:
            - containerPort: 1521
              name: tns
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          startupProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - grep "Done ! The database is ready for use ." /home/oracle/setup/log/setupDB.log
            failureThreshold: 30
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
